package com.Myexample.MyWebApp.Controller;import com.Myexample.MyWebApp.Entity.students;import com.Myexample.MyWebApp.Service.UserNotFoundException;import com.Myexample.MyWebApp.Service.UserService;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Controller;import org.springframework.ui.Model;import org.springframework.web.bind.annotation.GetMapping;import org.springframework.web.bind.annotation.PathVariable;import org.springframework.web.bind.annotation.PostMapping;import org.springframework.web.servlet.mvc.support.RedirectAttributes;import java.util.List;@Controllerpublic class UserController {    @Autowired    private UserService userService;    @GetMapping("/users")    public String showUserList(Model model)    {        List<students> students = userService.ListAllUsers();        model.addAttribute("Liststudent", students);        return "users";    }    @GetMapping("/users/new")    public String showNewForm(Model model)    {        model.addAttribute("student", new students());        model.addAttribute("pageTitle", "Add New User");        return "user-form";    }    @PostMapping("users/save")    public String saveUser(students user, RedirectAttributes ra)    {        userService.save(user);        RedirectAttributes message = ra.addFlashAttribute("message", "The user has been saved successfully.");        return "redirect:/users";    }    @GetMapping("/users/edit/{id}")    public String showEditForm(@PathVariable("id") Integer id, Model model,RedirectAttributes ra)    {        try {            students student =userService.get(id);            model.addAttribute("student", student);            model.addAttribute("pageTitle", "Edit User (ID: " + id + ")");            return "user-form";        } catch (UserNotFoundException e) {            RedirectAttributes message = ra.addFlashAttribute("message", e.getMessage());            return "redirect:/users";        }    }    @GetMapping("/users/delete/{id}")    public String deleteUser(@PathVariable("id") Integer id,RedirectAttributes ra)    {        try {            userService.delete(id);            RedirectAttributes message = ra.addFlashAttribute("message", "The user ID " + id + " has been delete successfully");        } catch (UserNotFoundException e) {            RedirectAttributes message = ra.addFlashAttribute("message", e.getMessage());        }        return "redirect:/users";    }}